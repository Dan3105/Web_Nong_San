package tad.entity;
// Generated Apr 8, 2023, 3:38:47 PM by Hibernate Tools 3.6.2.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "Account", schema = "dbo", catalog = "DB_Tad")
public class Account {

	private int accountId;
	private ShopSystem shopSystem;
	private Role role;
	private String lastName;
	private String firstName;
	private String email;
	private String phoneNumber;
	private byte[] avatar;
	private int state;
	private String password;
	private Set<Address> addresses = new HashSet<Address>(0);
	private Set<Order> orders = new HashSet<Order>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<Feedback> feedbacks = new HashSet<Feedback>(0);
	private Set<Cart> carts = new HashSet<Cart>(0);
	private Set<Category> categories = new HashSet<Category>(0);
	private Set<ShopSystem> shopSystems = new HashSet<ShopSystem>(0);

	public Account() {
	}

	public Account(int accountId, Role role, String lastName, String firstName, String email,
			int state, String password) {
		this.accountId = accountId;
		this.role = role;
		this.lastName = lastName;
		this.firstName = firstName;
		this.email = email;
		this.state = state;
		this.password = password;
	}

	public Account(int accountId, ShopSystem shopSystem, Role role, String lastName, String firstName,
			String email, String phoneNumber, byte[] avatar, int state, String password,
			Set<Address> addresses, Set<Order> orders, Set<Comment> comments, Set<Feedback> feedbacks, Set<Cart> carts,
			Set<Category> categories, Set<ShopSystem> shopSystems) {
		this.accountId = accountId;
		this.shopSystem = shopSystem;
		this.role = role;
		this.lastName = lastName;
		this.firstName = firstName;
		this.email = email;
		this.phoneNumber = phoneNumber;
		this.avatar = avatar;
		this.state = state;
		this.password = password;
		this.addresses = addresses;
		this.orders = orders;
		this.comments = comments;
		this.feedbacks = feedbacks;
		this.carts = carts;
		this.categories = categories;
		this.shopSystems = shopSystems;
	}

	@Id

	@Column(name = "AccountID", unique = true, nullable = false)
	public int getAccountId() {
		return this.accountId;
	}

	public void setAccountId(int accountId) {
		this.accountId = accountId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ShopID")
	public ShopSystem getShopSystem() {
		return this.shopSystem;
	}

	public void setShopSystem(ShopSystem shopSystem) {
		this.shopSystem = shopSystem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RoleID", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "LastName", nullable = false)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "FirstName", nullable = false)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "Email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PhoneNumber")
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "Avatar")
	public byte[] getAvatar() {
		return this.avatar;
	}

	public void setAvatar(byte[] avatar) {
		this.avatar = avatar;
	}

	@Column(name = "State", nullable = false)
	public int getState() {
		return this.state;
	}

	public void setState(int state) {
		this.state = state;
	}

	@Column(name = "Password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "accounts")
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Feedback> getFeedbacks() {
		return this.feedbacks;
	}

	public void setFeedbacks(Set<Feedback> feedbacks) {
		this.feedbacks = feedbacks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Cart> getCarts() {
		return this.carts;
	}

	public void setCarts(Set<Cart> carts) {
		this.carts = carts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Category> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Category> categories) {
		this.categories = categories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<ShopSystem> getShopSystems() {
		return this.shopSystems;
	}

	public void setShopSystems(Set<ShopSystem> shopSystems) {
		this.shopSystems = shopSystems;
	}

}
