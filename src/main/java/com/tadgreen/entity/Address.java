package com.tadgreen.entity;
// Generated Apr 3, 2023, 10:50:00 AM by Hibernate Tools 4.3.6.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "Address", schema = "dbo", catalog = "DB_Tad")
public class Address implements java.io.Serializable {

	private Serializable addressId;
	private Ward ward;
	private Serializable name;
	private Set<ShopSystem> shopSystems = new HashSet<ShopSystem>(0);
	private Set<User> users = new HashSet<User>(0);

	public Address() {
	}

	public Address(Serializable addressId, Ward ward) {
		this.addressId = addressId;
		this.ward = ward;
	}

	public Address(Serializable addressId, Ward ward, Serializable name, Set<ShopSystem> shopSystems, Set<User> users) {
		this.addressId = addressId;
		this.ward = ward;
		this.name = name;
		this.shopSystems = shopSystems;
		this.users = users;
	}

	@Id

	@Column(name = "AddressID", unique = true, nullable = false)
	public Serializable getAddressId() {
		return this.addressId;
	}

	public void setAddressId(Serializable addressId) {
		this.addressId = addressId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "WardID", nullable = false)
	public Ward getWard() {
		return this.ward;
	}

	public void setWard(Ward ward) {
		this.ward = ward;
	}

	@Column(name = "Name")
	public Serializable getName() {
		return this.name;
	}

	public void setName(Serializable name) {
		this.name = name;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "ShopAddress", schema = "dbo", catalog = "DB_Tad", uniqueConstraints = @UniqueConstraint(columnNames = "ShopID"), joinColumns = {
			@JoinColumn(name = "AddressID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ShopID", unique = true, nullable = false, updatable = false) })
	public Set<ShopSystem> getShopSystems() {
		return this.shopSystems;
	}

	public void setShopSystems(Set<ShopSystem> shopSystems) {
		this.shopSystems = shopSystems;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "AddressUser", schema = "dbo", catalog = "DB_Tad", joinColumns = {
			@JoinColumn(name = "AddressID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "UserID", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
